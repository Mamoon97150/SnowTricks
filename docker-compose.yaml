version: '3.9'
services:
    nginx-service:
        image: nginx:stable-alpine
        container_name: nginx-container
        ports:
            -  "8000:80"
        volumes:
            -   ./app:/var/www/project
            -   ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            -   php74-service
            -   mysql-service
        networks:
            dev:

    php74-service:
        build:
            context: .
            dockerfile: ./php/Dockerfile
        container_name: php74-container
        ports:
            -   "9000:9000"
        volumes:
            -   ./app:/var/www/project
            -   ./php/conf.d/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
        networks:
            dev:

    mysql-service:
        image: mysql:latest
        container_name: mysql-container
        restart: always
        environment:
            MYSQL_USER: admin
            MYSQL_ROOT_PASSWORD: secret
            MYSQL_PASSWORD: secret
        networks:
            dev:
        volumes:
            -   ./mysql:/var/lib/mysql

    phpmyadmin:
        image: phpmyadmin
        restart: always
        depends_on:
            -   mysql-service
        ports:
            - "8080:80"
        environment:
            - PMA_HOST=mysql-service
        networks:
            dev:

    node-service:
        image: node:latest
        container_name: node-container
        user: "node"
        working_dir: /var/www/project
        environment:
            - NODE_ENV=production
        volumes:
            - ./app:/var/www/project
        expose:
            - "8081"
        command: "npm start"
        networks:
            dev:

networks:
    dev:

volumes:
    db-data: