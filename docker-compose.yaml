version: '3.7'
services:
    nginx-service:
        image: nginx:stable-alpine
        container_name: nginx-container
        ports:
            -  "8000:80"
        volumes:
            -   ./app:/var/www/project
            -   ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            -   php74-service
            -   mysql-service

    php74-service:
        build:
            context: .
            dockerfile: ./php/Dockerfile
        container_name: php74-container
        ports:
            -   "9000:9000"
        volumes:
            -   ./app:/var/www/project

    mysql-service:
        image: mysql
        container_name: mysql-container
        command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: password
            MYSQL_DATABASE: main
        ports:
            # To allow the host machine to access the ports below, modify the lines below.
            # For example, to allow the host to connect to port 3306 on the container, you would change
            # "3306" to "3306:3306". Where the first port is exposed to the host and the second is the container port.
            # See https://docs.docker.com/compose/compose-file/#ports for more information.
            - '4306:3306'
        volumes:
            -   ./mysql:/var/lib/mysql

    phpmyadmin:
        image: phpmyadmin
        restart: always
        ports:
            - "8080:80"
        environment:
            - PMA_ARBITRARY=1

    node-service:
        image: node:latest
        container_name: node-container
        user: "node"
        working_dir: /var/www/project
        environment:
            - NODE_ENV=production
        volumes:
            - ./app:/var/www/project
        expose:
            - "8081"
        command: "npm start"